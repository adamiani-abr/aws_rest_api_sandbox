services:
  web_service:
    build:
      context: ./src_api_gateway/web_service
      dockerfile: Dockerfile
    depends_on:
      - order_service
      - auth_service
    environment:
      AUTH_SERVICE_URL_REST_API: http://auth_service:5000
      ORDER_SERVICE_URL_REST_API: http://order_service:5003
      SECRET_KEY: supersecretkey
      PORT_FLASK: 5001
      REDIS_HOST: redis
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION}"
      GOOGLE_OAUTH_CLIENT_ID: "${GOOGLE_OAUTH_CLIENT_ID}"
      GOOGLE_OAUTH_CLIENT_SECRET: "${GOOGLE_OAUTH_CLIENT_SECRET}"
      FLASK_ENV: development
    networks:
      - app-network
    ports:
      - "5001:5001"

  order_service:
    build:
      # context: ./src_api_gateway/order_service
      context: ./src_api_gateway/order_service_fastapi
      dockerfile: Dockerfile
    depends_on:
      - auth_service
    environment:
      AUTH_SERVICE_URL: http://auth_service:5000
      PORT: 5003
      FLASK_ENV: development
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION}"
      AWS_ORDER_CREATED_SNS_TOPIC_ARN: "${AWS_ORDER_CREATED_SNS_TOPIC_ARN}"
      AWS_APP_CONFIG_APP_ID: "${AWS_APP_CONFIG_APP_ID}"
      AWS_APP_CONFIG_ENV_ID: "${AWS_APP_CONFIG_ENV_ID}"
      AWS_APP_CONFIG_CONFIG_PROFILE_ID: "${AWS_APP_CONFIG_CONFIG_PROFILE_ID}"
      AWS_APP_CONFIG_CACHE_TTL: "${AWS_APP_CONFIG_CACHE_TTL}"
      AWS_APP_CONFIG_FEATURE_FLAG_KEY_API_GATEWAY_AUTHORIZER_AUTH_SERVICE: "${AWS_APP_CONFIG_FEATURE_FLAG_KEY_API_GATEWAY_AUTHORIZER_AUTH_SERVICE}"
      AWS_APP_CONFIG_FEATURE_FLAG_KEY_API_GATEWAY_AUTHORIZER_LAMBDA_AUTHORIZER: "${AWS_APP_CONFIG_FEATURE_FLAG_KEY_API_GATEWAY_AUTHORIZER_LAMBDA_AUTHORIZER}"
    networks:
      - app-network
    ports:
      - "5003:5003"

  auth_service:
    build:
      context: ./src_api_gateway/auth_service
      dockerfile: Dockerfile
    depends_on:
      - redis
    environment:
      REDIS_SSL: False
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SECRET_KEY: supersecretkey
      PORT_FLASK: 5000
      SESSION_EXPIRE_TIME_SECONDS: 3600
    networks:
      - app-network
    ports:
      - "5000:5000"

  # dummy_service:
  #   build:
  #     context: ./src_api_gateway/dummy_service
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - redis
  #   environment:
  #     PORT_FLASK: 5002
  #     REDIS_HOST: redis
  #   networks:
  #     - app-network
  #   ports:
  #     - "5002:5002"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
